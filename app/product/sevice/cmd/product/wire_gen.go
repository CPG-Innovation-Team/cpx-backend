// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"cpx-backend/app/product/internal/biz"
	"cpx-backend/app/product/internal/conf"
	"cpx-backend/app/product/internal/data"
	"cpx-backend/app/product/internal/server"
	"cpx-backend/app/product/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewDB(confData, logger)
	client := data.NewRedis(confData, logger)
	dataData, cleanup, err := data.NewData(logger, db, client)
	if err != nil {
		return nil, nil, err
	}
	productRepo := data.NewProductRepo(dataData, logger)
	productUseCase := biz.NewProductUseCase(productRepo, logger)
	productService := service.NewProductService(productUseCase)
	grpcServer := server.NewGRPCServer(confServer, productService, logger)
	app := newApp(logger, grpcServer)
	return app, func() {
		cleanup()
	}, nil
}
